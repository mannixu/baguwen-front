{"version":3,"sources":["uni-app:///main.js","webpack:///D:/JavaEE/uniapp在线教育/pages/base/base.vue?e330","webpack:///D:/JavaEE/uniapp在线教育/pages/base/base.vue?29fa","webpack:///D:/JavaEE/uniapp在线教育/pages/base/base.vue?a03d","webpack:///D:/JavaEE/uniapp在线教育/pages/base/base.vue?3e5d","uni-app:///pages/base/base.vue"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page"],"mappings":"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","file":"pages/base/base.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './pages/base/base.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./base.vue?vue&type=template&id=30d800b4&\"\nvar renderjs\nimport script from \"./base.vue?vue&type=script&lang=js&\"\nexport * from \"./base.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"pages/base/base.vue\"\nexport default component.exports","export * from \"-!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--16-0!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/template.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-uni-app-loader/page-meta.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base.vue?vue&type=template&id=30d800b4&\"","var components\ntry {\n  components = {\n    single_answer: function() {\n      return import(\n        /* webpackChunkName: \"components/single_answer/single_answer\" */ \"@/components/single_answer/single_answer.vue\"\n      )\n    },\n    fill_answers: function() {\n      return import(\n        /* webpackChunkName: \"components/fill_answers/fill_answers\" */ \"@/components/fill_answers/fill_answers.vue\"\n      )\n    },\n    answer_sheet: function() {\n      return import(\n        /* webpackChunkName: \"components/answer_sheet/answer_sheet\" */ \"@/components/answer_sheet/answer_sheet.vue\"\n      )\n    }\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!../../../../HbuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../HbuilderX/plugins/uniapp-cli/node_modules/babel-loader/lib/index.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/webpack-preprocess-loader/index.js??ref--12-1!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/script.js!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/vue-cli-plugin-uni/packages/vue-loader/lib/index.js??vue-loader-options!../../../../HbuilderX/plugins/uniapp-cli/node_modules/@dcloudio/webpack-uni-mp-loader/lib/style.js!./base.vue?vue&type=script&lang=js&\"","<template>\n\t<view class=\"content\" >\r\n\t\t\r\n\t    <!-- swiper 想要点击切换加上current 想要获取当前页e.detail.current -->\r\n\t    <swiper style=\"height: 800px\"  :current=\"currentTab\"  @change=\"changeContent\">\r\n\t        \r\n\t            <!-- 这个函数作用就是改变currentable的值 滑动加不加都可以滑动 -->\r\n\t            <swiper-item v-for=\"(item, index) in topic\" :key=\"index\">\r\n\t\t\t\t\t <block v-if=\"item.type == 1\">\r\n\t\t\t\t\t\t <single_answer\r\n\t\t\t\t\t\t :item=\"item\"\r\n\t\t\t\t\t\t :currentTab=\"currentTab\"\r\n\t\t\t\t\t\t :radiosflag=\"radiosflag\"\r\n\t\t\t\t\t\t :topicTotal=\"topic.length\"\r\n\t\t\t\t\t\t :selectflag=\"selectflag\"\r\n\t\t\t\t\t\t :results=\"results\"\r\n\t\t\t\t\t\t @truntopic=\"truntopic\"\r\n\t\t\t\t\t\t >\r\n\t\t\t\t\t\t\t \r\n\t\t\t\t\t\t </single_answer>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t </block>\r\n\t\t\t\t\t <block v-if=\"item.type == 2\">\r\n\t\t\t\t\t \t<fill_answers\r\n\t\t\t\t\t \t:item=\"item\"\r\n\t\t\t\t\t \t:currentTab=\"currentTab\"\r\n\t\t\t\t\t \t:radiosflag=\"radiosflag\"\r\n\t\t\t\t\t \t:topicTotal=\"topic.length\"\r\n\t\t\t\t\t \t:value=\"inputtwo\"\r\n\t\t\t\t\t \t:results=\"results\"\r\n\t\t\t\t\t \t@bloselur=\"bloselur\"\r\n\t\t\t\t\t \t@bindKeyInput=\"bindKeyInput\"\r\n\t\t\t\t\t \t@truntopic=\"truntopic\"\r\n\t\t\t\t\t \t>\r\n\t\t\t\t\t \t\t\t\t\t\t \t\t\t\t\t\t\t \r\n\t\t\t\t\t \t</fill_answers>\r\n\t\t\t\t\t \t\t\t\t\t\t\r\n\t\t\t\t\t </block>\r\n\t\t\t\t\t\r\n\t\t\t\t</swiper-item>\r\n\t\t\t\t<swiper-item >\r\n\t\t\t\t\t<answer_sheet\r\n\t\t\t\t\t:chapterName=\"chapterName\"\r\n\t\t\t\t\t:unitName=\"unitName\"\r\n\t\t\t\t\t:radiosflag=\"radiosflag\"\r\n\t\t\t\t\t:topic=\"topic\"\r\n\t\t\t\t\t:results=\"results\"\r\n\t\t\t\t\t@submit=\"submitData\"\r\n\t\t\t\t\t@truntopic=\"truntopic\"\r\n\t\t\t\t\t@doagagin=\"doagagin\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</answer_sheet>\r\n\t\t\t\t</swiper-item>\r\n\t\t\t\r\n\t\t</swiper>\r\n\t\t\r\n\t</view>\n</template>\n\n<script>\r\n\timport { getTopicList } from 'api/base';\r\n\t\n\texport default {\n\t\tdata() {\n\t\t\treturn {\n\t\t\t\ttopic:[],  //题目集合\r\n\t\t\t\tchapterName: '',  //章节名\r\n\t\t\t\tunitName: '',   //小节名\r\n\t\t\t\tcurrentTab: 0 , //swiper-item当前页\r\n\t\t\t\tradiosflag: true ,  //题目是否提交\r\n\t\t\t\tresults: [],//题目未提交是题目是否回答，提交题目回答结果true false\r\n\t\t\t\tselectflag: [], // 我选的答案的顺序集合 是每个选择题 我选择的答案的顺序结合如 第一题选c 第二题选b 集合为[3,2]\r\n\t\t\t\tfillvalue:[] ,  // 用于判断题目的每个填空是否都有值的集合 fillvalue\r\n\t\t\t\tinputtwo: [],  //inputtwo是个二维数组  二维数组每一行是一道填空题各个答案\r\n\t\t\t\t\r\n\t\t\t\t\n\t\t\t};\n\t\t},\n\t\r\n\t\r\n\tcreated() {\r\n\t   \r\n\t   \r\n\t},\r\n\tonLoad(options) {\r\n\t  this.chapterName=options.chapterName;\r\n\t  this.unitName=options.unitName;\r\n\t  this.getTopicList();\r\n\t},\r\n\t// 定义方法\r\n\tmethods: {\r\n\t\t/**\r\n\t\t * 获取题目集合\r\n\t\t */\r\n\t\tasync getTopicList() {\r\n\t\t  // uniapp 支持 async await\r\n\t\t  const { data: res } = await getTopicList({\r\n\t\t\t  chapterTitle: this.chapterName,\r\n\t\t\t  unitName: this.unitName\r\n\t\t  });\r\n\t\t  this.topic=res;\r\n\t\t},\r\n\t\t/**\r\n\t\t * 页面滑动事件\r\n\t\t */\r\n\t\tchangeContent: function (e) {\r\n\t\t    var current = e.detail.current;  //获取当前页\r\n\t\t    this.currentTab=current;\r\n\t\t},\r\n\t\t\r\n\t\t//redio单选框被点击\r\n\t\ttruntopic: function (e) {\r\n\t\t    //选择题的点击事件  跳转下一页与设置选择题有值\r\n\t\t    var that = this; //获取参数跳转那一页\r\n\t\t\r\n\t\t    let renum1 = e.currentTarget.dataset.num1; //1_2 传过来第一题第二个答案\r\n\t\t\r\n\t\t    let num1 = renum1.charAt(0); //获取第几题\r\n\t\t\r\n\t\t    let seleid = renum1.charAt(2); //表示第几个答案 用于展示那个是我选的\r\n\t\t\r\n\t\t\tif (seleid=='a') {       //答题卡上题目被点击也会调用此方法\r\n\t\t\t\tthis.currentTab=num1 //如果是答题卡页面 直接跳转指定页面\r\n\t\t\t}\r\n\t\t\r\n\t\t    let isresult = this.results;  //题目是否回答，提交题目回答结果true 未回答false\r\n\t\t\t\r\n\t\t\t\r\n\t\t    // setsele[num1 - 1] = seleid; //把我选的答案顺序放到集合里\r\n\t\t    this.$set(this.selectflag,num1 - 1 , seleid)\r\n\t\t    //如果为空情况点击 设置true有值  如果非空情况点击 去掉值  设置flase没值\r\n\t\t\r\n\t\t    if (isresult[num1 - 1] == '' || isresult[num1 - 1] == undefined || isresult[num1 - 1] == false) {\r\n\t\t        isresult[num1 - 1] = true; //选择题做题结果 true代表不空显示蓝色\r\n\t\t\t\tthis.$set(this.results,num1 - 1 , true)\r\n\t\t    } else {  //取消选择\r\n\t\t        // isresult[num1-1]=\"\";\r\n\t\t\t\t// num1=num1-1;  //设置页面不跳转\r\n\t\t    }\r\n\t\t\r\n\t\t\t// this.results=isresult\r\n\t\t\t// this.selectflag=setsele\r\n\t\t\t\r\n\t\t\t \r\n\t\t\t\r\n\t\t\tthis.currentTab=num1 //设置跳转下一页\r\n\t\t    // that.setData({\r\n\t\t    //     currentTab: num1 //设置跳转下一页\r\n\t\t    // });\r\n\t\t},\r\n\t\t\r\n\t\t\r\n\t\t//输入框失去焦点事件  主要判断此道填空是否回答\r\n\t\tbloselur(e) {\r\n\t\t\t\r\n\t\t\t\r\n\t\t    let that = this; \r\n\t\t\r\n\t\t    let strid = e.currentTarget.dataset.num2; //填空传过来参数\r\n\t\t\r\n\t\t    let vlu = e.detail.value; //填空里值\r\n\t\t\r\n\t\t    let topid = strid.charAt(0); //题目id\r\n\t\t\r\n\t\t    let qusid = strid.charAt(2);//问题id\r\n\t\t    let fivalue = this.fillvalue;  //判断填空题是否有数据标志符\r\n\t\t\r\n\t\t    if (vlu == '' || vlu == undefined) {\r\n\t\t        //输入框无值\r\n\t\t        fivalue[qusid] = '';\r\n\t\t    } else {\r\n\t\t        //输入框有值\r\n\t\t        fivalue[qusid] = true;\r\n\t\t    } \r\n\t\t\t// that.setData({\r\n\t\t\t//     fillvalue: fivalue\r\n\t\t\t// }); // console.log(fivalue)\r\n\t\t\tthis.fillvalue=fivalue;\r\n\t\t\r\n\t\t\t//填空题正确答案个数\r\n\t\t    let trid = this.topic[topid].listTrue.length; \r\n\t\t\r\n\t\t    let preresult = this.results;//获取题目回答结果 判断题目是否回答\r\n\t\t    \r\n\t\t\r\n\t\t    let okfill = this.fillvalue; //用于判断填空是否都有值\r\n\t\t\r\n\t\t    let flg = true;     //表示每个填空都有值\r\n\t\t\r\n\t\t    for (const key in okfill) {\r\n\t\t        //判断填空是否都有值\r\n\t\t        if (okfill[key] != true || okfill.length != trid) {\r\n\t\t            //有一个没值设置为flase\r\n\t\t            flg = false;\r\n\t\t        }\r\n\t\t    }\r\n\t\t\r\n\t\t    if (flg) {\r\n\t\t        //表示填空都有值\r\n\t\t\t\tthis.$set(this.results,topid , true)\r\n\t\t        // preresult[topid] = true; //设置此道填空题都有值\r\n\t\t\t\t// this.results=preresult;\r\n\t\t       \r\n\t\t\t\t//都有值设置fillvalue为空不然 下一题默认fillvalue是有值的  用于判断题目的每个填空是否都有值的集合 fillvalue\r\n\t\t\t\tthis.fillvalue=[];\r\n\t\t        // that.setData({\r\n\t\t        //     fillvalue: []\r\n\t\t        // });\r\n\t\t    } else {\r\n\t\t        //不是都有值重新设置一下 防止都有值 然后去掉一个空格值 不能及时更新\r\n\t\t\t\tthis.$set(this.results,topid , '')\r\n\t\t\t\t// preresult[topid] = '';\r\n\t\t\t\t// this.results=preresult\r\n\t\t        \r\n\t\t    }\r\n\t\t\t\r\n\t\t},\r\n\t\t\r\n\t\tbindKeyInput: function (e) {\r\n\t\t   \r\n\t\t\t//获取输入值  //键盘输入时触发\r\n\t\t\t//题目id\r\n\t\t\tlet topid = e.currentTarget.dataset.num2.charAt(0);\r\n\t\t\tlet tiid = e.currentTarget.dataset.num2.charAt(2); //问题id\r\n\t\t\t\r\n\t\t\tlet inputtw = this.inputtwo; //获得题目数组  inputtwo是个二维数组  二维数组每一行是一道填空题各个答案\r\n\t\t\t\r\n\t\t\tif (inputtw[topid] == undefined) {\r\n\t\t\t    inputtw[topid] = []; //定义第二层是个数组 不然为undefined\r\n\t\t\t} //不能直接给二维数组第二层赋值 必须先定义第二层数组\r\n\t\t\t\r\n\t\t\tinputtw[topid][tiid] = e.detail.value; //设置此行数据\r\n\t\t\t\r\n\t\t\t\r\n\t\t\tthis.inputtwo=inputtw\r\n\t\t\t\r\n\t\t\tconsole.log(this.inputtw)\r\n\t\t\tconsole.log(this.inputtwo)\r\n\t\t},\r\n\t\t\r\n\t\tsubmitData(event) {\r\n\t\t    //提交题目效验 错题入库  题目记录 number+1\r\n\t\t    let that = this;\r\n\t\t    // let result = event.detail.value; //题目答题结果\r\n\t\t\tlet topicval={}  //把所有答案放到对象中\r\n\t\t\tfor (var i = 0; i < this.topic.length; i++) {  //循环选择题答案集合与填空题答案结合放到一个新的集合中\r\n\t\t\t\tif(this.selectflag[i]!=undefined){ //此i题为选择题\r\n\t\t\t\t\tlet j=this.selectflag[i]  //获取选择题答案 选择的顺序 如c为2\r\n\t\t\t\t\tlet v=this.topic[i].listError[j]   //获取选择的答案的值 如 c 天津\r\n\t\t\t\t\tlet singlekey='radio' + i\r\n\t\t\t\t\ttopicval[singlekey]=v\r\n\t\t\t\t\t// let singleval={singlekey:v}\r\n\t\t\t\t\t// result.push(singleval)  //topic.listError[selectflag[i]]为选中答案值\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor (var z = 0; z < this.topic[i].listTrue.length ; z++) {  //'topic' + currentTab + '_input' + idx\"\r\n\t\t\t\t\t\tlet v=this.inputtwo[i][z]           //获取每个填空题每个输入框的值\r\n\t\t\t\t\t\tlet fillkey='topic' + i + '_input' +z  //'topic' + currentTab + '_input' + idx\" 用于获取是哪一题哪个选项\r\n\t\t\t\t\t\ttopicval[fillkey]=v\r\n\t\t\t\t\t\t// let fillval={fillkey:v}\r\n\t\t\t\t\t\t// result.push(fillval)\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\tconsole.log(topicval)\r\n\t\t    let newresult = []; //错误题目结果\r\n\t\t\r\n\t\t    let errorid = [];\r\n\t\t    let topic = that.topic;\r\n\t\t    const keys = Object.keys(topicval);\r\n\t\t    const keyss = Object.values(topicval);\r\n\t\t    const values = Object.entries(topicval); //构建一个属性与属性值的二维数组 【属性,属性值】 【属性,属性值】\r\n\t\t\r\n\t\t    let index = 0; //用于题目遍历\r\n\t\t\r\n\t\t    let erid = 0; //用于存放错误题目集合的索引\r\n\t\t\r\n\t\t    let flag = true; //用于判断填空题做的可对\r\n\t\t\r\n\t\t    let nums = 0; //用于判断填空题问题个数\r\n\t\t\r\n\t\t    for (let key in values) { //values是每一题提交答案 选择题只有一个 填空有多个提交答案\r\n\t\t        //获取正确答案集合\r\n\t\t        let listtrue = topic[index].listTrue; //\r\n\t\t\r\n\t\t        let topicid = topic[index].id; //获取题目id\r\n\t\t\t\t\r\n\t\t        let rename = values[key][0].substring(0, 5); //获取答案名前缀 选择题以radio开头 填空题以topic开头\r\n\t\t\r\n\t\t        let revalue = values[key][1]; // 获取提交答案值 \r\n\t\t\r\n\t\t        if (rename == 'radio') {\r\n\t\t            //选择题处理逻辑\r\n\t\t            if (revalue == listtrue[0]) {\r\n\t\t                //答对\r\n\t\t                newresult[index] = true;\r\n\t\t            } else {\r\n\t\t                newresult[index] = false; //向结果集合存答题情况\r\n\t\t\r\n\t\t                errorid[erid] = topicid; //向错题id结合存错题id\r\n\t\t\r\n\t\t                erid++;\r\n\t\t            }\r\n\t\t\r\n\t\t            index++;\r\n\t\t        } \r\n\t\t\t\t//填空题处理逻辑\r\n\t\t        if (rename == 'topic') {  //填空题name  'topic' + index + '_input' + idx\r\n\t\t            //题目次数\r\n\t\t            // let g = values[key][0];\r\n\t\t            // let z = g.charAt(5);\r\n\t\t            // let f = values[key][0].charAt(5);\r\n\t\t            let topid = values[key][0].charAt(5); //哪个题目\r\n\t\t\r\n\t\t            let qusid = values[key][0].charAt(12); //题目哪个个问题\r\n\t\t\r\n\t\t            let trueresult = listtrue[qusid]; //正确答案\r\n\t\t\r\n\t\t            if (revalue == trueresult) {//判断\r\n\t\t            } else {\r\n\t\t                //不正确\r\n\t\t                flag = false; //有一个问题不正确 则flag标志设置为false 表示此题错误\r\n\t\t            } //设置结果结合newresult和errorid 错题id集合\r\n\t\t\r\n\t\t            if (nums < listtrue.length - 1) {  //用于判断问题是不是属于同一题目\r\n\t\t                //  小于问题个数\r\n\t\t                nums++;\r\n\t\t            } else {\r\n\t\t                //等于问题个数即当前题目最后一个问题\r\n\t\t                if (flag) {\r\n\t\t                    //问题都回答正确\r\n\t\t                    newresult[index] = true;\r\n\t\t                } else {\r\n\t\t                    //有问题回答错误\r\n\t\t                    newresult[index] = false; //向结果集合存答题情况\r\n\t\t\r\n\t\t                    errorid[erid] = topicid; //向错题id结合存错题id\r\n\t\t\r\n\t\t                    erid++;\r\n\t\t                    flag = true; //重置flag\r\n\t\t                }\r\n\t\t\r\n\t\t                nums = 0; //重置nums\r\n\t\t\r\n\t\t                index++; //表示问题遍历完开始遍历下一题\r\n\t\t            }\r\n\t\t        }\r\n\t\t    } //循环结束 获取到 错误id接 errorid  和newrsult 题目结果集合\r\n\t\t    //把答题情况设置到data里\r\n\t\t\r\n\t\t\tthis.results=newresult;\r\n\t\t\tthis.radiosflag=false\r\n\t\t    // that.setData({\r\n\t\t    //     results: newresult,\r\n\t\t    //     radiosflag: false //表示已经提交过\r\n\t\t    // }); // console.log(errorid)\r\n\t\t    // console.log(newresult)\r\n\t\t    // console.log(JSON.stringify(errorid))\r\n\t\t\r\n\t\t    let eid = JSON.stringify(errorid); //数组类型 先转为字符串 再转对象才能传参成功\r\n\t\t\r\n\t\t    let re = JSON.parse(eid); //把错题返回服务器保存\r\n\t\t\r\n\t\t    uni.request({\r\n\t\t        method: 'post',\r\n\t\t        //依据接口情况\r\n\t\t        url: 'http://127.0.0.1:8080/baguwen/topic/errorid',\r\n\t\t        //微信小程序必须是https:\r\n\t\t        data: {\r\n\t\t            errorId: JSON.parse(eid),\r\n\t\t            userId: 1 //没做登录先设置为1\r\n\t\t        },\r\n\t\t        header: {\r\n\t\t            'content-type': 'application/json' // 默认值\r\n\t\t        },\r\n\t\t\r\n\t\t        success(res) {\r\n\t\t            // 没有返回结果后面可以设置预测分\r\n\t\t        },\r\n\t\t\r\n\t\t        fail(err) {\r\n\t\t\t\t\t\r\n\t\t        }\r\n\t\t    });\r\n\t\t},\r\n\t\t\r\n\t\tdoagagin() {\r\n\t\t   \r\n\t\t\tthis.getTopicList();\r\n\t\t   \r\n\t\t\tthis.radiosflag=true;\r\n\t\t\tthis.currentTab=0;\r\n\t\t\tthis.results=[];\r\n\t\t\tthis.selectflag=[]; \r\n\t\t\tthis.fillvalue=[] ;\r\n\t\t\tthis.inputtwo=[]\r\n\t\t    \r\n\t\t}\r\n\t\t\r\n\t},\r\n  };\n</script>\n\n<style lang=\"scss\">\n\n</style>\n"],"sourceRoot":""}